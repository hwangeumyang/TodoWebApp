plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'org.hgy'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// https://mvnrepository.com/artifact/com.google.guava/guava
	implementation group: 'com.google.guava', name: 'guava', version: '32.1.2-jre'
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5' // or 'io.jsonwebtoken:jjwt-gson:0.12.5' for gson
    /*
      Uncomment this next dependency if you are using:
       - JDK 10 or earlier, and you want to use RSASSA-PSS (PS256, PS384, PS512) signature algorithms.
       - JDK 10 or earlier, and you want to use EdECDH (X25519 or X448) Elliptic Curve Diffie-Hellman encryption.
       - JDK 14 or earlier, and you want to use EdDSA (Ed25519 or Ed448) Elliptic Curve signature algorithms.
      It is unnecessary for these algorithms on JDK 15 or later.
    */
    // runtimeOnly 'org.bouncycastle:bcprov-jdk18on:1.76' // or bcprov-jdk15to18 on JDK 7
	
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '3.2.4'
	// https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
	implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.1.0'
	
	
}

tasks.named('test') {
	useJUnitPlatform()
}

task('release') {
	/* ./gradlew build를 먼저 실행 */
	dependsOn("build")
	
	doLast {
		def stdout = new ByteArrayOutputStream()
		/* exec - 커맨 라인 프로세서; 파워셀, 터미널에서 실행하는 것과 같다. */
		exec {
			/* $eb setenv SPRING_PROFILES_ACTIVE=prod */
			commandLine 'eb', 'setenv', 'SPRING_PROFILES_ACTIVE=prod'
			standardOutput = stdout
		}
		/* 결과 로깅을 위한 작업 */
		println "eb setenv spring_profiles_active=prod :\n$stdout";
		exec {
			/* $eb deploy */
			commandLine 'eb', 'deploy'
			standardOutput = stdout
		}
		println "eb deploy :\n$stdout";
		println "Releas succeeded."
	}
}